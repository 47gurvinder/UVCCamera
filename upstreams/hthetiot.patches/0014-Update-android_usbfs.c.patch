From ac5f141f3e3485cd6fe2198b14bdbdd3e01248e2 Mon Sep 17 00:00:00 2001
From: Plena <zoelam020@gmail.com>
Date: Wed, 16 Dec 2020 10:17:10 +0800
Subject: [PATCH 14/16] Update android_usbfs.c

Fixed crash when Android target SDK > 27
---
 .../src/main/jni/libusb/libusb/os/android_usbfs.c     | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/libuvccamera/src/main/jni/libusb/libusb/os/android_usbfs.c b/libuvccamera/src/main/jni/libusb/libusb/os/android_usbfs.c
index 8626595..932787f 100644
--- a/libuvccamera/src/main/jni/libusb/libusb/os/android_usbfs.c
+++ b/libuvccamera/src/main/jni/libusb/libusb/os/android_usbfs.c
@@ -2726,6 +2726,9 @@ static int handle_iso_completion(struct libusb_device_handle *handle,	// XXX add
 
 	usbi_mutex_lock(&itransfer->lock);
 	for (i = 0; i < num_urbs; i++) {
+		 if(tpriv->iso_urbs == NULL){
+	        	return LIBUSB_TRANSFER_ERROR;
+	    	}
 		if (urb == tpriv->iso_urbs[i]) {
 			urb_idx = i + 1;
 			break;
@@ -2926,7 +2929,13 @@ static int reap_for_handle(struct libusb_device_handle *handle) {
 
 	usbi_dbg("urb type=%d status=%d transferred=%d",
 		urb->type, urb->status, urb->actual_length);
-
+	
+	//if not check status, will crash when target > 27
+	//current error status is -108
+	if(urb->status < 0){
+	    return LIBUSB_ERROR_OTHER;
+	}
+	
 	switch (transfer->type) {
 	case LIBUSB_TRANSFER_TYPE_ISOCHRONOUS:
 		return handle_iso_completion(handle, itransfer, urb);
-- 
2.47.1

